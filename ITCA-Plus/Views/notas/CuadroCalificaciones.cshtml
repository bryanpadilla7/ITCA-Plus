<!--Variables globales-->
@{
    ViewBag.Title = "CuadroCalificaciones";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @model ITCA_Plus.Models.Notas
    var Listado = ViewBag.ListadoPorMateriaGrado as List<ITCA_Plus.Models.vw_AlumnosPorMateriaGrado>;
    var yaGuardadas = ViewBag.NotasYaGuadadas as List<ITCA_Plus.Models.Notas>;
    var permisoActivado = ViewBag.permisoEdicion as List<ITCA_Plus.Models.notiCambioNota>;
    string[] trimestres = { "Primer Trimestre", "Segundo Trimestre", "Tercer Trimestre" };
    var cliente = Session["cuenta"] as ITCA_Plus.Models.Usuarios;
}
<!--Acciones para visualizaciones-->
<script>
    $(document).ready(function () {
          $("#gradoDList").on("change", function () {
              var gradoId = $(this).val();
              var docente = $("#docenteId").val();
              console.log(gradoId)

                 if (gradoId != null) {
                    $.ajax({
                        url: '@Url.Action("ObtenerMaterias", "notas")',
                        type: 'POST',
                        data: {
                            grado: gradoId,
                            docente: docente
                        },
                        success: function (data) {
                            // Limpiar y llenar el combo de alumnos
                            var $materiaDropdown = $("#materiaDList");
                            $materiaDropdown.empty();
                            $materiaDropdown.append('<option value="">Seleccione materia</option>');

                            $.each(data, function (i, item) {
                                $materiaDropdown.append('<option value="' + item.Value + '">' + item.Text + '</option>');
                            });

                            // Mostrar el div si estaba oculto
                            $("#materia").show();
                        },
                        error: function () {
                            alert("Seleccione una opción válida")

                        }
                    });
                }
            });
         $("#materiaDList").on("change", function () {
             var gradoId = $("#gradoDList").val();
            console.log(gradoId)
             var materia = $(this).val();
             console.log(materia)
             var docente = $("#docenteId").val();
             if (gradoId != null && materia != null) {
                $.ajax({
                    url: '@Url.Action("ObtenerAlumnosPorGrado", "notas")',
                    type: 'POST',
                    data: {
                        grado: gradoId,
                        mat: materia,
                        docente: docente
                    },
                    success: function (data) {
                        // Limpiar y llenar el combo de alumnos
                        var $alumnoDropdown = $("#alumDList");
                        $alumnoDropdown.empty();
                        $alumnoDropdown.append('<option value="">Seleccione alumno</option>');

                        $.each(data, function (i, item) {
                            $alumnoDropdown.append('<option value="' + item.Value + '">' + item.Text + '</option>');
                        });

                        // Mostrar el div si estaba oculto
                        $("#alumno").show();
                    },
                    error: function () {
                        alert("Error al obtener los alumnos.");
                    }
                });
            }
         });
        $('#AgregarNotasModal').on('show.bs.modal', function (event) {
            var btnQueAbrioElModal = $(event.relatedTarget);
            var trimestre = btnQueAbrioElModal.attr('name');
            $('#trimestre').text(trimestre);
            let alumnoId = btnQueAbrioElModal.data('alumnoid');
            let materiaId = btnQueAbrioElModal.data('materiaid');


            if (!alumnoId || !materiaId) {
                alumnoId = $('#alumDList').val();
                materiaId = $('#materiaDList').val();
            }
            var anioActual = new Date().getFullYear();
            $('#alumnoId').val(alumnoId);
            $('#materiaId').val(materiaId);
            $('#anioEscolar').val(anioActual);
            $('#trimestresInput').val(trimestre);
            console.log(materiaId)
            // Consultar si ya existen notas
            $.ajax({
                type: "POST",
                url: '@Url.Action("NotasGuardadas", "notas")',
                data: {
                    materia: materiaId,
                    alumno: alumnoId,
                    trimestre: trimestre
                },
                success: function (response) {
                    if (response.existe == true) {
                        // Rellenar los campos del modal
                        $("#txtNota1").val(response.nota1);
                        $("#txtNota2").val(response.nota2);
                        $("#txtNota3").val(response.nota3);
                        console.log(response)
                        $("#btnGuardar").val("Editar");
                        $("#btnGuardar").attr("class", "btn btn-outline-primary");
                    } else {
                        // Limpiar los campos si no hay datos
                        $("#txtNota1").val("");
                        $("#txtNota2").val("");
                        $("#txtNota3").val("");
                        console.log(response)
                        $("#btnGuardar").val("Guardar");
                        $("#btnGuardar").attr("class", "btn btn-outline-success");
                    }
                    $("#btnGuardar").attr("onclick", "enviarForm()");
                },
                error: function () {
                    alert("Error al verificar existencia de notas.");
                }
            });


        });

    });
    function enviarForm() {
        var periodo = $("#trimestre").text();
        var nota1 = $("#txtNota1").val();
        var nota2 = $("#txtNota2").val();
        var nota3 = $("#txtNota3").val();
        var alumnoid = $('#alumnoId').val();
        var materiaId = $('#materiaId').val();
        var anioEscolar = $('#anioEscolar').val();
        console.log(materiaId)
        if (periodo == "" || nota1 == "" || nota2 == "" || nota3 == "" || materiaId == "" || alumnoid == "" || anioEscolar == "") {
            alert("Todos los campos son requeridos");
            return;
        }

        var datos = $("#formNotas");
        var boton = $("#btnGuardar").val();
        var formData = datos.serialize() + "&boton=" + boton;


         $.ajax({
             type: "POST",
             url: '@Url.Action("IngresoNotas", "notas")',
             data: formData,
             success: function (response) {
                 if (response == "Guardadas" || response == "Modificadas") {
                     $("button[data-alumnoid='" + formData.alumno_id + "'][data-materiaid='" + formData.materia_id + "'][name='" + periodo + "']")
                         .prop("disabled", true);
                     //alert("Notas " + response + " con éxito!");

                     
                     location.reload();
                 } else {
                      alert("Acción cancelada.");
                 }
         },
             error: function () {
                 alert("Error al procesar la solicitud.");
             }
         });

    }
</script>


<h2>Cuadro de Calificaciones</h2>
<p>
    @cliente.rol
</p>
<!--Card filtradora de listado-->
<div class="container d-flex justify-content-center align-items-center">
    <div class="card" style="width: 800px;">
        <h5 class="card-header text-center" style="background-color: #aeb6bf;">Filtrar</h5>
        <div class="card-body">
            <!-- Formulario para agregar notas por alumno-->
            @using (Html.BeginForm("CuadroCalificaciones", "notas", System.Web.Mvc.FormMethod.Post))
            {
                if (cliente.rol == "Admin")
                {
                    <div class="mb-3">
                        @Html.Label("Docente:")
                        @Html.DropDownList("docente", (IEnumerable<SelectListItem>)ViewBag.cmbDocentes, "Seleccione docente", htmlAttributes: new { @class = "form-control", required = "required", id = "docenteId", style = "max-width: none;" })
                    </div>
                }
                <div class="mb-3">
                    @Html.Label("Grado:")
                    @Html.DropDownList("grado", (IEnumerable<SelectListItem>)ViewBag.cmbGrado, "Seleccione grado", htmlAttributes: new { @class = "form-control", required = "required", id = "gradoDList", style = "max-width: none;" })
                </div>

                <div class="mb-3" id="materia" style="display: none;">
                    @Html.Label("Materia:")
                    <select id="materiaDList" name="materia" class="form-control" required="required" style="max-width: none;">
                        <option value="">Seleccione primero un grado válido</option>
                    </select>
                </div>
                <div class="mb-3" id="alumno" style="display: none;">
                    @Html.Label("Alumno:")
                    <select id="alumDList" name="alumno" class="form-control" style="max-width: none;">
                        <option value="">Seleccione una materia válida </option>
                    </select>
                </div>
                <div class="d-grid gap-2 mt-4">
                    <input type="submit" value="Buscar" class="btn btn-outline-info" style="max-width: none;" />
                </div>

            }
        </div>
    </div>
</div>

<!--Card que muestra los datos filtrados-->
<div class="container d-flex justify-content-center align-items-center mt-5">
    <div class="card" style="width: 800px;">
        <h5 class="card-header text-center" style="background-color: #aeb6bf;">Resultados de la búsqueda</h5>
        <div class="card-body">
            @if (ViewBag.ListadoPorMateriaGrado != null && Listado.Any())
            {
                <div class="table-responsive">
                    <table class="table table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <td>Carnet</td>
                                <td>Nombre Alumno</td>
                                <td>Notas 1° Trimestre</td>
                                <td>Notas 2° Trimestre</td>
                                <td>Notas 3° Trimestre</td>
                                <td>Acciones</td>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (ITCA_Plus.Models.vw_AlumnosPorMateriaGrado item in Listado)
                                {
                                    <tr>
                                        <td class="scope">@item.carnet</td>
                                        <td>@item.alumno</td>
                                        @for (int i = 0; i < 3; i++)
                                        {
                                            string trimestreActual = trimestres[i];
                                            if (cliente.rol != "Admin")
                                            {

                                                // Revisa si existen notas para ese alumno con esta materia
                                                bool notaExiste = yaGuardadas.Any(n =>
                                                    n.alumno_id == item.alumno_id &&
                                                    n.materia_id == item.materia_id &&
                                                    n.trimestres == trimestreActual);

                                                // ¿Existe una solicitud de cambio con permiso habilitado?
                                                bool permisoHabilitado = permisoActivado.Any(n =>
                                                    n.alumno_id == item.alumno_id &&
                                                    n.materia_id == item.materia_id &&
                                                    n.trimestres == trimestreActual &&
                                                    n.permiso == true);

                                                // Si ya hay nota y no hay permiso habilitado → deshabilitar botón
                                                bool deshabilitar = notaExiste && !permisoHabilitado;


                                                <td>
                                                    <button class="btn btn-dark btn-sm" id="notas"
                                                            data-alumnoid="@item.alumno_id"
                                                            data-materiaid="@item.materia_id"
                                                            name="@trimestreActual"
                                                            data-bs-toggle="modal" data-bs-target="#AgregarNotasModal"
                                                            @(deshabilitar ? "disabled" : "")>
                                                        <i class="fas fa-file-lines"></i> Configurar notas
                                                    </button>
                                                </td>
                                            }
                                            else
                                            {
                                                <td>
                                                    <button class="btn btn-dark btn-sm" id="notas"
                                                            data-alumnoid="@item.alumno_id"
                                                            data-materiaid="@item.materia_id"
                                                            name="@trimestreActual"
                                                            data-bs-toggle="modal" data-bs-target="#AgregarNotasModal">
                                                        <i class="fas fa-file-lines"></i> Configurar notas
                                                    </button>
                                                </td>
                                            }
                                        }
                                        @if (cliente.rol != "Admin")
                                        {
                                            <td>

                                                <a href="@Url.Action("EditarNotas","notas", new { idMateria = item.materia_id, nombreMateria = item.materia,
                                                                       idDoc= item.docente_id,
                                                                   idAlum= item.alumno_id, nombreAlum = item.alumno})" class="btn btn-primary btn-sm">
                                                    <i class="fa-solid fa-user-pen"></i> Editar
                                                </a>
                                            </td>
                                        }

                                    </tr>

                                }
                            }
                        </tbody>
                    </table>
                </div>
                <script>
                    document.getElementById('alumno').style.display = 'block';
                    document.getElementById('materia').style.display = 'block';
                </script>
            }
        </div>
            </div>
</div>

<!-- AgregarNotasModal -->
<div class="modal fade" id="AgregarNotasModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Notas Periodo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <td class="scope">Periodo</td>
                            <td>Notas 1°</td>
                            <td>Notas 2°</td>
                            <td>Notas 3°</td>
                        </tr>
                    </thead>
                    <tbody>
                        @using (Html.BeginForm("IngresoNotas", "notas", FormMethod.Post, htmlAttributes: new { id = "formNotas" }))
                        {
                            <tr>
                                <td class="scope"><span id="trimestre"></span></td>
                                <td>
                                    @Html.TextBoxFor(m => m.nota1, new
                               {
                                   @class = "form-control",
                                   type = "number",
                                   min = "0.1",
                                   max = "10",
                                   step = "0.1",
                                   placeholder = "9.5",
                                   id = "txtNota1"
                               })
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m.nota2, new
                               {
                                   @class = "form-control",
                                   type = "number",
                                   min = "0.1",
                                   max = "10",
                                   step = "0.1",
                                   placeholder = "9.5",
                                   id = "txtNota2"
                               })
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m.nota3, new
                               {
                                   @class = "form-control",
                                   type = "number",
                                   min = "0.1",
                                   max = "10",
                                   step = "0.1",
                                   placeholder = "9.5",
                                   id = "txtNota3"
                               })
                                </td>
                            </tr>
                            @Html.HiddenFor(x => x.materia_id, new
                               {
                                   name = "materiaId",
                                id = "materiaId",
                                value = ""
                               })
                            @Html.HiddenFor(x => x.alumno_id, new
                               {
                                   name = "alumnoId",
                                id = "alumnoId",
                                value = ""
                               })
                            @Html.HiddenFor(x => x.anio_escolar, new
                               {
                                   name = "anioEscolar",
                                id = "anioEscolar",
                                value = ""
                               })
                            @Html.HiddenFor(x => x.trimestres, new
                               {
                                   name = "trimestresInput",
                                   id = "trimestresInput",
                                   value = ""
                               })
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <input type="button" name="boton" value="Guardar" id="btnGuardar" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
</div>
