@model ITCA_Plus.Models.Usuarios

@{
    ViewBag.Title = "Agregar Docente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
}

<!-- Sección de Scripts -->
<script>
    $(document).ready(function () {

        $('#actualizar').hide();
        $('#eliminar').hide();
        load();

        function cargarMaterias() {
            $.ajax({
                url: '@Url.Action("GetMaterias", "Admin")',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    $('#especialidad').empty().append('<option value="">Selecciona la Especialidad</option>');
                    data.forEach(function (materia) {
                        $('#especialidad').append(`<option value="${materia.nombre}">${materia.nombre}</option>`);
                    });
                },
                error: function () {
                    alert('Error al cargar las materias.');
                }
            });
        }

        // Ejecutar al cargar el modal o la página:
        cargarMaterias();


        function load() {
            $.ajax({
                url: '@Url.Action("GetDocente", "Admin")',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    $('#tbody').empty();
                    if (data.length > 0) {
                        data.forEach((user, index) => {
                            $('#tbody').append(`
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${user.nombre_docente}</td>
                                    <td>${user.telefono}</td>
                                    <td>${user.correo}</td>
                                    <td>${user.carnet}</td>
                                    <td>${user.especialidad}</td>
                                    <td>
                                        <a href="#" class="me-2" onclick="cargarUpdate('${user.carnet}')" data-bs-toggle="modal" data-bs-target="#modalDocente" title="Editar">
                                            <i class="fa-solid fa-pen fa-lg text-warning"></i>
                                        </a>
                                        <a href="#" onclick="cargarDelete('${user.carnet}')" data-bs-toggle="modal" data-bs-target="#modalDocente" title="Eliminar">
                                            <i class="fa-solid fa-trash fa-lg text-danger"></i>
                                        </a>
                                    </td>
                                </tr>`);
                        });
                    } else {
                        $('#tbody').append('<tr><td colspan="6" class="text-center">No hay docentes.</td></tr>');
                    }
                },
                error: function () {
                    alert('Error al cargar los docentes.');
                }
            });
        }



        $(document).on('submit', '#formDocente', function (e) {
            e.preventDefault();
            var formData = new FormData(this);
            var isUpdate = $('#actualizar').is(':visible');

            $.ajax({
                url: isUpdate ? '@Url.Action("ActualizarDocente", "Admin")' : '@Url.Action("AgregarDocente", "Admin")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        Swal.fire(isUpdate ? 'Docente actualizado' : 'Docente registrado', '', 'success').then(() => {
                            $('#idDocente').val('');
                            $('#btnCerrarModal').click();
                            load();
                        });
                    } else {
                        Swal.fire('Error', response.message, 'error');
                    }
                }
            });
        });

         // Eliminar Docente
        document.getElementById('eliminar').addEventListener('click', function () {
            var id = $("#id").val();

            Swal.fire({
                title: '¿Estás seguro?',
                text: "El docente será desactivado.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("EliminarDocente", "Admin")',
                        type: 'POST',
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire('Eliminado', response.message, 'success').then(() => {
                                    $('#idDocente').val('');
                                    $('#btnCerrarModal').click();
                                    load(); // 🔥 Ya no te dará error
                                });
                            } else {
                                Swal.fire('Error', response.message, 'error');
                            }
                        }
                    });
                }
            });
        });
        // fin de document ready
    });


    function cargarUpdate(usuario) {
        $.ajax({
            url: '@Url.Action("GetDoc", "Admin")',
            type: 'GET',
            data: { usuario: usuario },
            success: function (data) {
                if (data.success) {
                    $('#id').val(data.usuario.id);
                    $('#formDocente input[name="nombre"]').val(data.usuario.nombre);
                    $('#formDocente input[name="tel"]').val(data.usuario.tel);
                    $('#formDocente input[name="correo"]').val(data.usuario.correo);
                    $('#formDocente input[name="contrasena"]').val(data.usuario.contrasena);
                    $('#formDocente select[name="especialidad"]').val(data.especialidad);

                    if (data.usuario.fotografia) {
                        let base64Image = "data:image/png;base64," + data.usuario.fotografia;
                        $('#previewFoto').attr('src', base64Image).removeClass('d-none');
                    } else {
                        $('#previewFoto').attr('src', '#').addClass('d-none');
                    }

                    $('#actualizar').show();
                    $('#guardar').hide();
                    $('#eliminar').hide();
                } else {
                    alert('No se pudieron cargar los datos del docente.');
                }
            },
            error: function () {
                alert('Error al cargar los datos.');
            }
        });
    }


    function cargarDelete(usuario) {
    $.ajax({
        url: '@Url.Action("GetDoc", "Admin")',
        type: 'GET',
        data: { usuario: usuario },
        success: function (data) {
            if (data.success) {
                $('#id').val(data.usuario.id);
                $('#formDocente input[name="nombre"]').val(data.usuario.nombre);
                $('#formDocente input[name="tel"]').val(data.usuario.tel);
                $('#formDocente input[name="correo"]').val(data.usuario.correo);
                $('#formDocente input[name="contrasena"]').val(data.usuario.contrasena);
                $('#formDocente select[name="especialidad"]').val(data.especialidad);

                if (data.usuario.fotografia) {
                    let base64Image = "data:image/png;base64," + data.usuario.fotografia;
                    $('#previewFoto').attr('src', base64Image).removeClass('d-none');
                } else {
                    $('#previewFoto').attr('src', '#').addClass('d-none');
                }

                $('#guardar').hide();
                $('#eliminar').show();
                $('#actualizar').hide();
            } else {
                alert('No se pudieron cargar los datos del docente.');
            }
        },
        error: function () {
            alert('Error al cargar los datos.');
        }
    });
}

    function mostrarPreview(event) {
        const input = event.target;
        const preview = document.getElementById("previewFoto");

        if (input.files && input.files[0]) {
            const reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
                preview.classList.remove("d-none");
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        const modalElement = document.getElementById("modalDocente");

        if (modalElement) {
            modalElement.addEventListener("hidden.bs.modal", function () {
                const form = document.getElementById("formDocente");
                if (form) form.reset();

                const fotoPreview = document.getElementById("previewFoto");
                if (fotoPreview) {
                    fotoPreview.src = "#";
                    fotoPreview.classList.add("d-none");
                }

                form.querySelectorAll('.is-invalid, .is-valid').forEach(input => {
                    input.classList.remove('is-invalid', 'is-valid');
                });

                form.querySelectorAll('.field-validation-error, .text-danger').forEach(span => {
                    span.innerHTML = '';
                });

                form.classList.remove('was-validated');

                $('#guardar').show();
                $('#actualizar').hide();
                $('#eliminar').hide();
            });
        }

        const telInput = document.getElementById('tel');
        if (telInput) {
            telInput.addEventListener('input', function () {
                let value = telInput.value.replace(/\D/g, '');
                if (value.length > 4) {
                    value = value.slice(0, 4) + '-' + value.slice(4, 8);
                }
                telInput.value = value.slice(0, 9);
            });
        }
    });
</script>


<main class="container d-flex align-items-center justify-content-center min-vh-100">

    <div class="container d-flex justify-content-center align-items-center pt-4">
        <div class="card" style="width: 1200px;">
            <!-- Cabecera con título y botón en la misma fila -->
            <div class="card-header d-flex justify-content-between align-items-center" style="background-color: #435D7D;">
                <h5 class="mb-0 text-white">Listado de docentes</h5>

                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modalDocente" id="btnNuevo">
                        <i class="fa-solid fa-circle-plus"></i> Agregar docente
                    </button>
                </div>
            </div>

            <div class="card-body">
                <table class="table">
                    <thead>
                        <tr style="color: #435D7D;">
                            <th>#</th>
                            <th>Nombre</th>
                            <th>Tel</th>
                            <th>Correo</th>
                            <th>Carnet</th>
                            <th>Especialidad</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="tbody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</main>

<!-- Modal -->
<div class="modal fade" id="modalDocente" tabindex="-1" aria-labelledby="modalDocenteLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content rounded-4 shadow border-0">
            <div class="modal-header bg-success text-white rounded-top-4">
                <h5 class="modal-title" id="modalDocenteLabel">Agregar Docente</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar" id="btnCerrarModal"></button>
            </div>
            <div class="modal-body">
                <form id="formDocente" enctype="multipart/form-data">
                    
                    @Html.AntiForgeryToken()

                    <div class="row g-4">
                        <!-- Columna izquierda -->
                        <div class="col-md-7">
                            <input type="hidden" name="Id" id="id" />
                            <div class="mb-3">
                                @Html.LabelFor(m => m.nombre, new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person-fill"></i></span>
                                    @Html.TextBoxFor(m => m.nombre, new { @class = "form-control", placeholder = "Nombre completo", style = "max-width: none", required = "required" })
                                </div>
                                @Html.ValidationMessageFor(m => m.nombre, "", new { @class = "text-danger small" })
                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(m => m.tel, new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-telephone-fill"></i></span>
                                    @Html.TextBoxFor(m => m.tel, new { @class = "form-control", placeholder = "0000-0000", type = "tel", style = "max-width: none", required = "required" })
                                </div>
                                @Html.ValidationMessageFor(m => m.tel, "", new { @class = "text-danger small" })
                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(m => m.correo, new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-envelope-fill"></i></span>
                                    @Html.TextBoxFor(m => m.correo, new { @class = "form-control", placeholder = "Correo electrónico", type = "email", style = "max-width: none", required = "required" })
                                </div>
                                @Html.ValidationMessageFor(m => m.correo, "", new { @class = "text-danger small" })
                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(m => m.contrasena, new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-lock-fill"></i></span>
                                    @Html.PasswordFor(m => m.contrasena, new { @class = "form-control", placeholder = "Contraseña", style = "max-width: none", required = "required" })
                                </div>
                                @Html.ValidationMessageFor(m => m.contrasena, "", new { @class = "text-danger small" })
                            </div>

                            <div class="mb-3">
                                <label for="especialidad" class="form-label">Especialidad</label>
                                <select class="form-select" id="especialidad" name="especialidad" required style="max-width:none">
                                    <option value="">Selecciona la Especialidad</option>
                                </select>
                                <div class="invalid-feedback">Seleccione una especialidad válida.</div>
                            </div>
                        </div>

                        <!-- Columna derecha -->
                        <div class="col-md-5 text-center">
                            <div class="mb-3">
                                <label for="foto" class="form-label">Fotografía (opcional)</label>
                                <input type="file" name="foto" id="foto" class="form-control" accept="image/*" onchange="mostrarPreview(event) " style="max-width: none" />
                            </div>
                            <div class="mb-3 border rounded" style="max-height: 200px;  height: 200px; overflow: hidden; ">
                                <img id="previewFoto" src="#" class="img-thumbnail d-none" style="max-height: 200px;">
                            </div>
                        </div>
                    </div>

                    <div class="d-grid mt-3">
                        <button type="submit" class="btn btn-success rounded-pill" id="guardar">
                            <i class="bi bi-plus-circle me-2"></i> Registrar Docente
                        </button>

                        <button type="submit" class="btn btn-success rounded-pill" id="actualizar">
                            <i class="bi bi-arrow-clockwise"></i> Actualizar Docente
                        </button>

                        <button type="button" class="btn btn-danger rounded-pill" id="eliminar">
                            <i class="bi bi-x-circle"></i> Eliminar Docente
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    (() => {
        'use strict';
        const forms = document.querySelectorAll('form')
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }
                form.classList.add('was-validated')
            }, false)
        })
    })()
</script>



