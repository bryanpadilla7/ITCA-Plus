@model ITCA_Plus.Models.ResponsableViewModel
@{
    ViewBag.Title = "Responsable";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container d-flex justify-content-center align-items-center">
    <div class="card" style="width:700px">
        <div class="card-header text-center text-white" style="background-color: #435D7D;">
            <h3>Actualizar información del responsable de:</h3>
            <h3>@ViewBag.nombreAlumno.ToUpper()</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("EditarResponsable", "Responsable", FormMethod.Post))
            {
                @Html.HiddenFor(model => model.AlumnoId)
                <div class="row">
                    <div class="col-md-6">
                        @Html.Label("Nombre del responsable")
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-person-raised-hand"></i></span>
                            @Html.TextBoxFor(r => r.nombre, new { @class = "form-control", style = "max-width: none;", id = "txtNombre", required = "required" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Parentesco</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-person-lines-fill"></i></span>
                            @Html.DropDownListFor(r => r.parentesco, (IEnumerable<SelectListItem>)ViewBag.cmbParentesco, new { @class = "form-control", style = "max-width: none;", id = "txtParentesco", required = "required" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        @Html.Label("Teléfono")
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-telephone-fill"></i></span>
                            @Html.TextBoxFor(r => r.telefono, new { @class = "form-control", placeholder = "0000-0000", style = "max-width: none;", id = "txtTelefono", required = "required" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Direccion</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-house-fill"></i></span>
                            @Html.TextBoxFor(r => r.direccion, new { @class = "form-control", style = "max-width: none;", id = "txtDireccion", required = "required" })
                        </div>
                    </div>
                </div>

                <div class="d-grid gap-2 mt-3">
                    <button type="submit" class="btn btn-warning" style="max-width: none;">
                        <i class="fa-solid fa-right-to-bracket"></i> Guardar cambios
                    </button>
                    <a href="@Url.Action("Alumnos", "Alumno")" class="btn btn-danger" style="max-width: none;">
                        <i class="fa-solid fa-ban"></i> Cancelar
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const telefono = document.getElementById("txtTelefono");

        if (telefono) {
            telefono.addEventListener('input', function () {
                let value = telefono.value.replace(/\D/g, '');
                if (value.length > 4) {
                    value = value.slice(0, 4) + '-' + value.slice(4, 8);
                }
                telefono.value = value.slice(0, 9);
            });
        }
    });
</script>