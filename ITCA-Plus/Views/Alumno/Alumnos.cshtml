@model ITCA_Plus.Models.Alumno
@{
    ViewBag.Title = "Alumnos";
    Layout = "~/Views/Shared/_Layout.cshtml";

    if (ViewBag.mensaje == "Agregado")
    {
        <script>
            console.log("Agregado")
        </script>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
}


<script>
    function cargarDelete(car, nom, fec, gen, idAlumno) {
        document.getElementById("txtCarnet").value = car;
        document.getElementById("txtNombre").value = nom;
        const [day, month, year] = fec.split('/');
        const isoDate = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;
        document.getElementById("txtFechaNacimiento").value = isoDate;
        document.getElementById("txtGenero").value = gen;

        // Actualizar la imagen de previsualización
        var imgPreview = document.getElementById("imgPreview");
        if (idAlumno) {
            imgPreview.src = '@Url.Action("convertirImagen", "Alumno")' + '?codAlumno=' + idAlumno;
            imgPreview.classList.remove("d-none");
        } else {
            imgPreview.src = "#";
            imgPreview.classList.add("d-none");
        }

        document.getElementById("alumnoModalLabel").innerText = "Eliminar registro";
        $("#btnEliminar").show();
        $("#btnGuardar").hide();
        $("#btnModificar").hide();
    }

    function confirmarDelete() {
        if (confirm("Estas seguro de eliminar el elumno?")) {
            document.getElementById("eliminacion").value = "si";
        } else {
            document.getElementById("eliminacion").value = "no";
        }
    }

    function cargarUpdate(car, nom, fec, gen, idAlumno) {
        document.getElementById("txtCarnet_visible").value = car;
        document.getElementById("txtCarnet").value = car;
        document.getElementById("txtNombre").value = nom;
        const [day, month, year] = fec.split('/');
        const isoDate = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;
        document.getElementById("txtFechaNacimiento").value = isoDate;
        document.getElementById("txtGenero").value = gen;

        var imgPreview = document.getElementById("imgPreview");
        if (idAlumno) {
            imgPreview.src = '@Url.Action("convertirImagen", "Alumno")' + '?codAlumno=' + idAlumno;
            imgPreview.classList.remove("d-none");
        } else {
            imgPreview.src = "#";
            imgPreview.classList.add("d-none");
        }

        document.getElementById("alumnoModalLabel").innerText = "Actualizar registro";
        $("#btnEliminar").hide();
        $("#btnGuardar").hide();
        $("#btnModificar").show();
    }

    function confirmarUpdate(event) {
        event.preventDefault();
        const form = event.target.form;

        if (!form.checkValidity()) {
            form.classList.add('was-validated');
            return;
        }

        document.getElementById("hdnAccion").value = "Modificar";

        Swal.fire({
            title: '¿Estás seguro?',
            text: "Se modificará el registro del alumno.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sí, modificar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById("modificacion").value = "si";
                form.submit(); // Envía el formulario manualmente
            } else {
                document.getElementById("modificacion").value = "no";
            }
        });
    }

    function confirmarSave(event) {
        event.preventDefault();
        const form = event.target.form;

        if (!form.checkValidity()) {
            form.classList.add('was-validated');
            return;
        }

        document.getElementById("hdnAccion").value = "Guardar";

        Swal.fire({
            title: 'Nuevo registro',
            text: "Al confirmar se guardará el registro",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sí, guardar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById("guardar").value = "si";
                form.submit(); 
            } else {
                document.getElementById("guardar").value = "no";
            }
        });
    }

    function cargarNuevo() {
        const nuevo = "@ViewBag.nuevoCarnet";

        document.getElementById("txtCarnet_visible").value = nuevo;
        document.getElementById("txtCarnet").value = nuevo;
        document.getElementById("txtNombre").value = "";
        document.getElementById("txtFechaNacimiento").value = "";

        var imgPreview = document.getElementById("imgPreview");
        imgPreview.src = "#";
        imgPreview.classList.add("d-none");
    }

    $(document).ready(function () {
        $("#btnNuevo").on("click", function () {
            document.getElementById("alumnoModalLabel").innerText = "Nuevo registro";

            $("#btnEliminar").hide();
            $("#btnModificar").hide();
            $("#btnGuardar").show();
        })
    });

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })
</script>

<h2>Alumnos</h2>

<!-- Modal -->
<div class="modal animate__animated animate__bounceIn" id="alumnoModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="alumnoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header text-center text-white" style="background-color: #435D7D;">
                <h1 class="modal-title fs-5" id="alumnoModalLabel">Nuevo registro</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @using (Html.BeginForm("AgregarAlumnos", "Alumno", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
            {
                <div class="modal-body">
                    <div class="row">
                        <!-- Columna para la foto -->
                        <div class="col-md-4 d-flex flex-column align-items-center">
                            <div class="mb-3">
                                @Html.Label("Fotografía")
                                <input type="file" name="fotoAlumno" class="form-control" onchange="previewImage(event)" id="txtfotografia" />
                            </div>
                            <!-- Contenedor para previsualización -->
                            <div class="border rounded" style="width: 200px; height: 200px; overflow: hidden;">
                                @if (Model != null && Model.id != 0)
                                {
                                    <img id="imgPreview" src="@Url.Action("convertirImagen", "Alumno", new { codAlumno = Model.id })"
                                         alt="Previsualización"
                                         class="img-fluid"
                                         style="object-fit: cover; width: 100%; height: 100%;" />
                                }
                                else
                                {
                                    <img id="imgPreview"
                                         src="#"
                                         alt="Previsualización"
                                         class="img-fluid d-none"
                                         style="object-fit: cover; width: 100%; height: 100%;" />
                                }
                            </div>
                        </div>

                        <div class="col-md-8">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    @Html.Label("Carnet")
                                    @Html.TextBox("carnet_mostrado", Model?.carnet, new { @class = "form-control", disabled = "disabled" ,style = "max-width: none;", id = "txtCarnet_visible" })
                                    @Html.HiddenFor(a => a.carnet, new { id="txtCarnet" })
                                </div>
                                <div class="col-md-6 mb-3">
                                    @Html.Label("Nombre alumno")
                                    @Html.TextBoxFor(a => a.nombre, new { @class = "form-control", style = "max-width: none;", id = "txtNombre", required = "required" })
                                    <div class="valid-feedback">Datos validos.</div>
                                    <div class="invalid-feedback">Este campo es obligatorio.</div>
                                </div>
                            </div>

                            <!-- Nueva fila para fecha de nacimiento y género -->
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    @Html.Label("Fecha de nacimiento")
                                    @Html.TextBoxFor(a => a.fecha_nacimiento, new { @class = "form-control", type = "date", style = "max-width: none;", id = "txtFechaNacimiento", required = "required" })
                                    <div class="valid-feedback">Datos validos.</div>
                                    <div class="invalid-feedback">Este campo es obligatorio.</div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    @Html.Label("Género")
                                    @Html.DropDownListFor(a => a.genero, (IEnumerable<SelectListItem>)ViewBag.cmbGenero, new { @class = "form-control", style = "max-width: none;", id = "txtGenero" })
                                    <div class="valid-feedback">Datos validos.</div>
                                    <div class="invalid-feedback">Este campo es obligatorio.</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" name="boton" id="hdnAccion" value="" />
                    <input type="hidden" name="eliminacion" id="eliminacion" value="no" />
                    <input type="hidden" name="guardar" id="guardar" value="no" />
                    <input type="hidden" name="modificacion" id="modificacion" value="no" />

                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" value="Guardar" onclick="confirmarSave(event)" id="btnGuardar" class="btn btn-primary">Guardar</button>
                    <button type="submit" value="Modificar" onclick="confirmarUpdate(event)" id="btnModificar" class="btn btn-warning">Modificar</button>
                    @*<button type="submit" name="boton" value="Eliminar" onclick="javascript: confirmarDelete()" id="btnEliminar" class="btn btn-danger">Eliminar</button>*@
                </div>
            }
        </div>
    </div>
</div>

<div class="container d-flex justify-content-center align-items-center pt-4">
    <div class="card" style="width: 1200px;">
        <!-- Cabecera con título y botón en la misma fila -->
        <div class="card-header d-flex justify-content-between align-items-center" style="background-color: #435D7D;">
            <h5 class="mb-0 text-white">Listado de alumnos</h5>

            <div class="d-flex gap-2">
                <button type="button" onclick="cargarNuevo()" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#alumnoModal" id="btnNuevo">
                    <i class="fa-solid fa-circle-plus"></i> Agregar nuevo alumno
                </button>
            </div>
        </div>

        <div class="card-body">
            <table class="table">
                <thead>
                    <tr style="color: #435D7D;">
                        <th>Carnet</th>
                        <th>Nombre alumno</th>
                        <th>Fecha de nacimiento</th>
                        <th>Género</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (ITCA_Plus.Models.Alumno item in ViewBag.alumnos)
                        {
                            <tr>
                                <td>@item.carnet</td>
                                <td>@item.nombre</td>
                                <td>@Convert.ToDateTime(@item.fecha_nacimiento).ToString("dd/MM/yyyy")</td>
                                <td>@item.genero</td>
                                <td>
                                    @if (!((List<int>)ViewBag.tieneResponsable).Contains(item.id))
                                    {
                                        <a href="@Url.Action("Responsables", "Responsable", new { id = item.id })"
                                           class="me-4"
                                           style="text-decoration:none;"
                                           data-toggle="tooltip"
                                           data-placement="top"
                                           title="Agrega responsable">
                                            <i class="fa-solid fa-user-shield fa-lg text-info"></i>
                                        </a>
                                    }
                                    else if (((List<int>)ViewBag.tieneResponsable).Contains(item.id))
                                    {
                                        <a href="@Url.Action("Responsable", "Responsable", new { id = item.id })"
                                           class="me-4"
                                           style="text-decoration:none;"
                                           data-toggle="tooltip"
                                           data-placement="top"
                                           title="Editar responsable">
                                            <i class="fa-solid fa-rotate fa-lg text-primary"></i>
                                        </a>
                                    }
                                    <a href=""
                                       class="me-4"
                                       style="text-decoration:none;"
                                       onclick="javascript: cargarUpdate('@item.carnet','@item.nombre','@Convert.ToDateTime(item.fecha_nacimiento).ToString("dd/MM/yyyy")','@item.genero','@item.id')"
                                       data-bs-toggle="modal"
                                       data-bs-target="#alumnoModal"
                                       data-toggle="tooltip"
                                       data-placement="top"
                                       title="Editar">
                                        <i class="fa-solid fa-pen fa-lg text-warning"></i>
                                    </a>
                                    @*<a href=""
                                           style="text-decoration:none;"
                                           onclick="javascript: cargarDelete('@item.carnet','@item.nombre','@Convert.ToDateTime(item.fecha_nacimiento).ToString("dd/MM/yyyy")','@item.genero', '@item.id')"
                                           data-bs-toggle="modal"
                                           data-bs-target="#alumnoModal"
                                           data-toggle="tooltip"
                                           data-placement="top"
                                           title="Eliminar">
                                            <i class="fa-solid fa-trash fa-lg text-danger"></i>
                                        </a>
                                    *@
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    function previewImage(event) {
        const input = event.target;
        const preview = document.getElementById('imgPreview');

        if (input.files && input.files[0]) {
            const reader = new FileReader();

            reader.onload = function (e) {
                preview.src = e.target.result;
                preview.classList.remove("d-none");
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const nombre = document.getElementById("txtNombre");
        const fechaNacimiento = document.getElementById("txtFechaNacimiento");

        nombre.addEventListener("blur", function () {
            if (nombre.value.trim().length > 0) {
                nombre.classList.remove("is-invalid");
                nombre.classList.add("is-valid");
            } else {
                nombre.classList.remove("is-valid");
                nombre.classList.add("is-invalid");
            }
        });

        fechaNacimiento.addEventListener("blur", function () {
            if (fechaNacimiento.value.trim().length > 0) {
                fechaNacimiento.classList.remove("is-invalid");
                fechaNacimiento.classList.add("is-valid");
            } else {
                fechaNacimiento.classList.remove("is-valid");
                fechaNacimiento.classList.add("is-invalid");
            }
        });
    });
</script>
